@*
SPDX-License-Identifier: Apache-2.0
Licensed to the Ed-Fi Alliance under one or more agreements.
The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
See the LICENSE and NOTICES files in the project root for more information.
*@

@using DataImport.Web.Infrastructure
@model DataImport.Web.Features.ApiServers.AddEditApiServerViewModel

@{
    ViewBag.Title = (!@Model.Id.HasValue ? "Add" : "Edit") + " API Connection";
    var hidden = string.IsNullOrEmpty(Model.ApiVersion) ? "hidden=true" : "";
    var hiddenForApiVersionSeven = string.IsNullOrEmpty(Model.ApiVersion) || Model.ApiVersion != "7.1" ? "hidden=true" : "";
}

<h2>@ViewBag.Title</h2>

@if (Model.ConfigurationFailureMsg != null)
{
    <div class="alert alert-danger">@Model.ConfigurationFailureMsg</div>
}

@if (Model.EncryptionFailureMsg != null)
{
    <div class="alert alert-danger" id="encryption-error">@Model.EncryptionFailureMsg</div>
}

<div id="validationSummary" class="alert alert-danger hidden"></div>

@using (Html.AjaxForm())
{
    @Html.HiddenFor(m => m.Id)
    @Html.Input(m => m.Name)

    <div id="divApiVersion" @hidden>
        @Html.ReadOnlyInput(m => m.ApiVersion, "ApiVersionContent")
    </div>

    @Html.Input(m => m.Url, new { placeholder = "API Server Base URL (Example: https://[url]/api/v2.0/2019)" },
        Html.HelpSpan("Examples: https://ods.example.com/api/v2.0/2019, https://ods.example.com/data/v3, or https://ods.example.com/data/v3/2019"),
        Html.OdsApiUrlHelpModalButton())

    <div id="divApiVersionSeven" @hiddenForApiVersionSeven>
        @Html.Input(m => m.Tenant)
        @Html.Input(m => m.Context)
    </div>

    @Html.Input(m => m.Key)
    @Html.Input(m => m.Secret)

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="button" class="btn btn-default btn-sm" id="btnTest">Test Connection</button>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <hr />
            <button type="submit" class="btn btn-primary" id="btnSave">Save Changes</button>
            <a href="@Url.Action("Index")">Cancel</a>
            <p class="help-block">
                <span class="text-warning" id="txtSaveChangesWarning">Please test the connection to enable saving your changes.</span>&nbsp;
            </p>
        </div>
    </div>
}

@section scripts
{
    <script src="/bundles/jqueryval.min.js"></script>
    
    <script type="text/javascript">
        $(function($) {
            disableSaveButton(true);
            $("#btnTest").click(function() {
                disableFormButtons(true);
                clearValidationSummary();
                $.ajax({
                    type: 'POST',
                    data: {
                        id: $("#Id").val(),
                        url: $("#Url").val(),
                        apiVersion: $("#ApiVersion").val(),
                        key: $("#Key").val(),
                        secret: $("#Secret").val(),
                        context: $("#Context").val(),
                        tenant: $("#Tenant").val()
                    },
                    dataType: "json",
                    url: '@Url.Action("TestOdsApiConfiguration")',
                    success: function(data) {
                        disableTestButton(false);
                        if (data.isSuccessful === true) {
                            disableSaveButton(false);
                            toastr.success("Connection to API successful!");
                        } else {
                            toastr.error("Unable to connect to the API: " + data.message);
                        }
                    },
                    error: function(data) {
                        handleAjaxErrors(data);
                        disableTestButton(false);
                    }
                });
            });
            $("#Url").change(function() {
                var apiServerUrl = $("#Url").val();
                var tenant = $("#Tenant").val();
                var context = $("#Context").val();
                disableFormButtons(true);
                clearValidationSummary();
                $.ajax({
                    type: 'POST',
                    data: {
                        apiServerUrl: apiServerUrl,
                        tenant: tenant,
                        context: context
                    },
                    dataType: "html",
                    url: '@Url.Action("InferOdsApiVersion")',
                    success: function(data) {
                        handleApiVersionResponse(data);
                    },
                    error: function(data) {
                        handleAjaxErrors(data);
                        handleApiVersionResponse(null);
                    },
                    complete: function() {
                        disableTestButton(false);
                    }
                });
            });
            $("#Key").keyup(function() {
                disableSaveButton(true);
            });
            $("#Secret").keyup(function() {
                disableSaveButton(true);
            });

            $("#Context").keyup(function () {
                disableSaveButton(true);
            });
            $("#Tenant").keyup(function () {
                disableSaveButton(true);
            });


            function handleApiVersionResponse(apiVersion) {
                var apiUrl = $("#Url").val();
                if (!apiVersion && apiUrl)
                    $('#validationSummary').empty().removeClass('hidden')
                        .append('<li>Please enter a valid ODS API URL</li>');
                var input = $("#ApiVersion");
                input.val(apiVersion);
                $("#ApiVersionContent").text(apiVersion);
                $("#divApiVersion").attr('hidden', !apiVersion);
                $("#divApiVersionSeven").attr('hidden', apiVersion != "7.1");
            }

            function disableFormButtons(disabled) {
                disableSaveButton(disabled);
                disableTestButton(disabled);
            }

            function disableSaveButton(disabled) {
                $("#btnSave").prop("disabled", disabled);
                if (disabled) {
                    $("#txtSaveChangesWarning").show();
                } else {
                    $("#txtSaveChangesWarning").hide();
                }
            }

            function disableTestButton(disabled) {
                $("#btnTest").prop("disabled", disabled);
            }
        });
    </script>
}
